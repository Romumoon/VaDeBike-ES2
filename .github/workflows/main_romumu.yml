name: ci/cd
on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened]
jobs:
  build_and_test:
    name: Build and Test
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: 3.9

      - name: Install project dependencies
        run: |
          pip3 install --no-cache-dir -r requirements.txt
        working-directory: ${{ github.workspace }}
  
      - name: Run tests
        run: |
          pytest  
        working-directory: ${{ github.workspace }}
        
      - name: Upload a Build Artifact
        uses: actions/upload-artifact@v3.1.2
        with:
          # Artifact name
          name: py-file
          # A file, directory or wildcard pattern that describes what to upload
          path: main
          
  sonarcloud:
    name: SonarCloud
    runs-on: ubuntu-latest
    needs: build_and_test
    steps:
      - uses: actions/checkout@v3
        with:
          fetch-depth: 0  # Shallow clones should be disabled for a better relevancy of analysis
      - name: SonarCloud Scan
        uses: SonarSource/sonarcloud-github-action@master
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Needed to get PR information, if any
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

  deploy:
    name: Deploy Lightsail
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v2

      - name: Set up AWS CLI
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-west-2 # Substitua pela região desejada

      - name: Create Lightsail instance
        run: |
          aws lightsail create-instances \
            --instance-names "VaDeBike" \
            --availability-zone us-west-2a \
            --blueprint-id amazon-linux-2-x86_64 \
            --bundle-id nano_2_0
        id: lightsail

      - name: Wait for Lightsail instance to be running
        run: |
          instanceId=$(echo ${{ steps.lightsail.outputs.response }} | jq -r '.operations[0].resourceName' | cut -d/ -f2)
          aws lightsail wait instance-running --instance-name $instanceId
        id: wait

      - name: Deploy your service
        run: |
          # Obter o endereço IP da instância Lightsail
          instanceId=$(echo ${{ steps.lightsail.outputs.response }} | jq -r '.operations[0].resourceName' | cut -d/ -f2)
          ipAddress=$(aws lightsail get-instance --instance-name $instanceId | jq -r '.instance.publicIpAddress')
      
          # Substitua 'user' pelo nome do usuário SSH da instância Lightsail, e 'path/to/your/service' pelo caminho para seu serviço no servidor
          ssh -i /path/to/your/ssh/key.pem user@$ipAddress "cd path/to/your/service && git pull && ./deploy.sh"
        env:
          SSH_PRIVATE_KEY: ${{ secrets.SSH_PRIVATE_KEY }}

